<?xml version="1.0" encoding="US-ASCII"?>

<!DOCTYPE rfc SYSTEM "rfc2629.dtd">

<?rfc sortrefs="yes"?>
<?rfc subcompact="no"?>
<?rfc symrefs="yes"?>
<?rfc toc="yes"?>
<?rfc tocdepth="3"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>

<rfc category="info" docName="draft-ymbk-sidrops-rpki-rov-timing-01" ipr="trust200902">

<front>

  <title abbrev="RPKI ROV Timing">
  Timing Parameters in the RPKI based Route Origin Validation Supply Chain
  </title>

  <author fullname="Randy Bush" initials="R." surname="Bush">
    <organization>Internet Initiative Japan &amp; Arrcus, Inc.</organization>
    <address>
      <postal>
	<street>5147 Crystal Springs</street>
	<city>Bainbridge Island</city>
	<region>Washington</region>
	<code>98110</code>
	<country>United States of America</country>
      </postal>
      <email>randy@psg.com</email>
    </address>
  </author>

  <author fullname="Jay Borkenhagen" initials="J." surname="Borkenhagen">
    <organization>AT&amp;T</organization>
    <address>
      <postal>
	<street>200 Laurel Avenue South</street>
	<city>Middletown</city>
	<region>NJ</region>
	<code>07748</code>
	<country>United States of America</country>
      </postal>
      <email>jayb@att.com</email>
    </address>
  </author>

  <author fullname="Tim Bruijnzeels" initials="T." surname="Bruijnzeels">
    <organization>NLnet Labs</organization>
      <address>
	<postal>
	  <street></street>
	  <city></city>
	  <code></code>
	  <country></country>
	  <region></region>
	</postal>
      <phone></phone>
      <email>tim@nlnetlabs.nl</email>
      <uri>https://www.nlnetlabs.nl/</uri>
    </address>
  </author>

  <author fullname="Job Snijders" initials="J." surname="Snijders">
    <organization abbrev="NTT">NTT Ltd.</organization>
    <address>
      <postal>
	<street>Theodorus Majofskistraat 100</street>
	<code>1065 SZ</code>
	<city>Amsterdam</city>
	<country>The Netherlands</country>
      </postal>
      <email>job@ntt.net</email>
    </address>
  </author>

  <date />

  <abstract>
    <t>
      This document explores, and makes recommendations for, timing of
      Resource Public Key Infrastructure publication of ROV data, their
      propagation, and their use in Relying Parties and routers.
    </t>
  </abstract>

  <note title="Requirements Language">

    <t>
      The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
      NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED",
      "MAY", and "OPTIONAL" in this document are to be interpreted as
      described in BCP 14 <xref target="RFC2119"/> <xref
      target="RFC8174"/> when, and only when, they appear in all
      capitals, as shown here.
    </t>

  </note>

</front>

<middle>

  <section anchor="intro" title="Introduction">
    
    <t>
      This document explores, and makes recommendations for, timing of
      Resource Public Key Infrastructure (RPKI) publication of ROV data,
      their propagation, and their use in Relying Parties (RP), caches
      and routers.
    </t>

    <t>
      The RPKI supply chain from CAs to reach routers has a structure
      as follows:
    </t>
    <t>
      <list style="hanging">

	<t hangText="Cerification Authorities:">
	  The authoritative data of the RPKI are published by a
	  distributed set of Certification Authorities (CAs) at the
	  IANA, RIRs, NIRs, and ISPs (see <xref target="RFC6481"/>).
	</t>

	<t hangText="Publication Points:">
	  The CAs publish their authoritative data in publicly
	  accessible repositories which have a Publication Point (PP)
	  for each CA.
	</t>

	 <t hangText="Relying Parties:">
	   Relying Parties are a local (to the routers) set of one or
	   more collected and verified caches of RPKI data which are
	   collected from the PPs.
	 </t>
	 <t>
	   Currently RPs can pull from other RPs, thereby creating a
	   somewhat complex topology.
	 </t>

	 <t hangText="Routers:">
	   Validating routers fetch data from local RP caches using
	   the RPKI to Router Protocol, <xref
	   target="I-D.ietf-sidrops-8210bis"/>.  Routers are clients
	   of the caches.  Validating routers MUST have a trust
	   relationship with, and a trusted transport channel to, any
	   RP(s) they use.  <xref target="I-D.ietf-sidrops-8210bis"/>
	   specifies mechanisms for the router to assure itself of the
	   authenticity of the cache(s) and to authenticate itself to
	   cache(s).
	 </t>
      </list>
    </t>

    <t>
      As Resource Public Key Infrastructure based Route Origin
      Validation (ROV) becomes deployed in the Internet, the quality of
      the routing control plane, and hence timely and accurate delivery
      of packets in the data plane, increasingly depend on prompt and
      accurate propagation of the RPKI data from the originating
      Certification Authorities (CAs), to Relying Parties (RPs), to
      Border Gateway Protocol (BGP) speaking routers.
    </t>

    <t>
      Origin Validation based on stale ROAs allows accidental or
      intentional mis-origination; announcement of a prefix by an AS
      which does not have the authority to do so.  While delays in ROA
      propagation to ROV in routers can cause loss of good traffic.
      Therefore minimizing propagation time of data from CAs to routers
      is critical.
    </t>

    <t>
      Before the data can start on the CA to router supply chain, the
      resource holder (operator) MUST create or delete the relevant ROA(s)
      through the CA's operational interface(s). The operator is
      responsible for anticipating their future needs for ROAs, be aware
      of the propagation time from creating ROAs to effect on routing,
      and SHOULD create, delete, or modify ROAs sufficiently in advance
      of any needs in the routing system.
    </t>
    
    <t>
      There are questions of how frequently a CA publishes, how often an
      RP pulls, and how often routers pull from their RP(s).  Overall,
      the router(s) SHOULD react within an hour of ROA publication.
    </t>

    <t>
      For CAs publishing to PPs, a few seconds to a minute seems easily
      achieved with reasonable software.  See <xref target="publish"/>.
    </t>

    <t>
      Relying Party validating caches periodically retrieve data from CA
      publication points.  RPs using rsync to poll publication points
      every ten minutes would be a burden today, given the load it would
      put on publication services, cf. one notorious repository which is
      structured against specification.  RPs using RRDP impose no such
      load.  As the infrastructure moves from rsync to RRDP <xref
      target="I-D.sidrops-bruijnzeels-deprecate-rsync"/>, RRDP is
      designed for very frequent polling as long as Relying Parties use
      the "If-Modified-Since" header and there is a caching
      infrastructure.  For rsync, an hour would be the longest
      acceptable window.  See <xref target="rp-pull"/>.
    </t>

    <t>
      For the BGP speaking router(s) pulling from the RP(s), five
      minutes to an hour is a wide window.  But, the RPKI-Rtr protocol
      does have the Serial Notify PDU, the equivalent of DNS Notify,
      where the cache tells the router that it has new data.  See <xref
      target="router-pull"/>.
    </t>

    <t>
      We discuss each of these in detail below.
    </t>

   </section>

   <section anchor="related" title="Related Work">

    <t>It is assumed that the reader understands BGP, <xref
    target="RFC4271"/>, the RPKI <xref target="RFC6480"/>, RPKI
    Manifests <xref target="RFC6486"/>, Route Origin Authorizations
    (ROAs), <xref target="RFC6482"/>, the RPKI Repository Delta Protocol
    (RRDP) <xref target="RFC8182"/>, The Resource Public Key
    Infrastructure (RPKI) to Router Protocol <xref
    target="I-D.ietf-sidrops-8210bis"/>, RPKI-based Prefix Validation,
    <xref target="RFC6811"/>, and Origin Validation Clarifications,
    <xref target="RFC8481"/>.</t>

  </section>

  <section anchor="publish" title="Certification Authority Publishing">
    <t>
     A principal constraint on publication timing is ensuring the CRL
     and Manifest (<xref target="RFC6486"/>) are atomically correct with
     respect to the other repository data.  With rsync, the directory
     must be atomically correct before it becomes current.  RRDP (<xref
     target="RFC8182"/>) is similar, the directory must be atomically
     correct before it is published.
    </t>
  </section>

  <section anchor="rp-pull" title="Relying Party Fetching">
    <t>
     rsync puts a load on RPKI publication point servers.  Therefore
     relying party caches have been discouraged from fetching more
     frequently than on the order of an hour.  Times as long as a day
     were even suggested.  We conclude that RPs using rsync SHOULD pull
     from CA publication points once an hour.
    </t>
    <t>
      With RRDP (<xref target="RFC8182"/>), such constraints are no
      longer relevant.  <xref target="RFC8182"/> makes clear that
      polling as frequently as once a second is acceptable iff Relying
      Parties use the "If-Modified-Since" header and there is caching.
      In such circumstances, the RRDP polling interval MUST be no more
      than ten minutes.  We strongly recommend the migration from rsync
      to RRDP in <xref
      target="I-D.sidrops-bruijnzeels-deprecate-rsync"/>.
    </t>
    <t>
      Each validation run of each RP MUST generate the same set of
      Validated ROA Payloads (VRPs) when presented with identical input,
      using unexpired records from the most recent successful retrieval
      to deal only with complete failure to retrieve from a PP.
    </t>
    <t>
      A number of timers are embedded in the X.509 RPKI data which
      should also be considered.  E.g., CRL publication commitments,
      expiration of EE certificates pointing to Manifests, and the
      Manifests themselves.  Some CA operators commonly indicate new CRL
      information should be available in the next 24 hours.  These
      24-hour sliding timers, combined with fetching RPKI data once a
      day, cause needless brittleness in the face of transient network
      issues between the CA and RP.
     </t>
  </section>

  <section anchor="router-pull" title="Router Updating">
    <t>
     The rate of change of ROA data is estimated to remain small, on the
     order of a few ROAs a minute, but with bursts.  Therefore, the
     routers may update from the (presumed local) relying party cache(s)
     quite frequently.  Note that <xref
     target="I-D.ietf-sidrops-8210bis"/> recommends a polling interval
     of one hour.  This timing is conservative because caches can send a
     Serial Notify PDU to tell routers when there are new data to be
     fetched.
    </t>
    <t>
      A router SHOULD respond with a Serial Query when it receives a
      Serial Notify from a cache.  If a router can not respond
      appropriately to a Serial Notify, then it MUST send a periodic
      Serial Query no less frequently than once an hour.
    </t>
  </section>

  <section anchor="router-effect" title="Effect on Routing">
    <t>
      Once a router has received an End of Data PDU from a cache, the
      effect on Route Origin Validation MUST be a matter of seconds to a
      minute.  The router MAY allow incoming VRPs to affect Origin
      Validation as they arrive instead of waiting for the End of Data
      PDU.  See <xref target="I-D.ietf-sidrops-8210bis"/> for some
      cautions regarding the arrival sequence of VRPs.
    </t>
  </section>

  <section anchor="alt-tech" title="Alternative Technologies">
    <t>
      Should the supply chain include components or technologies other
      than those in IETF documents, the end effect SHOULD be the same;
      the router(s) SHOULD react to invalid AS origins within the same
      overall time constraint, an hour at most from ROA creation at the
      CA publication point to effect in the router.
    </t>
  </section>
  
  <section anchor="Security" title="Security Considerations">
    
    <t>
      Route Origin Validation by itself is not a full solution to secure
      the Internet routing system. On its own, Origin Validation is
      intended to catch operational errors, see section 6 of <xref target="RFC6811"/>.
    </t>
    <t>
      If an attacker can add, delete, or modify RPKI data, either in
      repositories or in flight, they can affect routing and thereby
      steer or damage traffic. The RPKI system design does much to deter
      these attacks [RFC 6486]. However the 'last mile' (from the cache
      to the router) uses transport security, as opposed to object security
      and as such is vulnerable.
      This is discussed in <xref target="I-D.ietf-sidrops-8210bis"/>
    </t>
    <t>
      Other than attacks on the integrity and completeness of RPKI data
      available to the RP, the passing of time itself strongly shapes the risk
      surface. If an attacker can delay prompt propagation of RPKI data on the
      supply chain described in this document, they can affect routing, and
      therefore traffic flow, to their advantage.
    </t>
    
  </section>

  <section anchor="IANA" title="IANA Considerations">
    <t>
      None
    </t>
  </section>

</middle>

<back>
    
  <references title="Normative References">
    <?rfc include="reference.RFC.2119"?>
    <?rfc include="reference.RFC.4271"?>
    <?rfc include="reference.RFC.6481"?>
    <?rfc include="reference.RFC.6486"?>
    <?rfc include="reference.RFC.6482"?>
    <?rfc include="reference.RFC.6811"?>
    <?rfc include="reference.RFC.8174"?>
    <?rfc include="reference.RFC.8182"?>
<!--    <?rfc include="reference.RFC.8210"?> -->
    <?rfc include="reference.RFC.8481"?>
    <?rfc include="reference.I-D.ietf-sidrops-8210bis"?>
    </references>

  <references title="Informative References">
    <?rfc include="reference.RFC.6480"?>
    <?rfc include="reference.I-D.sidrops-bruijnzeels-deprecate-rsync"?>
    </references>

  <section anchor="Acknowledgements" title="Acknowledgements">
    <t>
      The authors wish to thank Massimiliano Stucchi.
    </t>
  </section>

</back>

</rfc>
